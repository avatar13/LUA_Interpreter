// This code was generated by the Gardens Point Parser Generator
// Copyright (c) Wayne Kelly, QUT 2005-2008
// (see accompanying GPPGcopyright.rtf)

// GPPG version 1.3.5.190
// Machine:  AVATAR-èä
// DateTime: 22.11.2011 4:41:13
// UserName: Avatar
// Input file <Grammar_LUA.y>

// options: no-lines gplex

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Text;
using QUT.Gppg;

namespace LuaSyntax
{
public enum Tokens {error=126,
    EOF=127,str=128,digit=129,identifer=130,end=131,inT=132,
    repeatT=133,breakT=134,falseT=135,local=136,returnT=137,doT=138,
    forT=139,nil=140,then=141,elseT=142,functionT=143,trueT=144,
    elseifT=145,ifT=146,untilT=147,whileT=148,SMTH=149,ge=150,
    le=151,e=152,ne=153,doublePoint=154,or=155,and=156,
    not=157,UMINUS=158};

public struct ValueType
{
	public string s;	
	public int i;
	public double d;
}
// Abstract base class for GPLEX scanners
public abstract class ScanBase : AbstractScanner<ValueType,LexLocation> {
  private LexLocation __yylloc = new LexLocation();
  public override LexLocation yylloc { get { return __yylloc; } set { __yylloc = value; } }
  protected virtual bool yywrap() { return true; }
}

public class Parser: ShiftReduceParser<ValueType, LexLocation>
{
	string[] ids = new string[100];
	int ids_index = 0;
	double _baseNumber = 0;
#pragma warning disable 649
    private Dictionary<int, string> aliasses;
#pragma warning restore 649

  protected override void Initialize()
  {
    this.InitSpecialTokens((int)Tokens.error, (int)Tokens.EOF);

    this.InitStateTable(203);
    AddState(0,new State(-4,new int[]{-3,1,-5,3}));
    AddState(1,new State(new int[]{127,2}));
    AddState(2,new State(-1));
    AddState(3,new State(new int[]{127,4,130,52,138,73,148,76,133,122,146,126,137,139,134,142,139,143,143,162,136,182},new int[]{-6,5,-9,8,-22,67,-1,51,-24,53,-11,72}));
    AddState(4,new State(-2));
    AddState(5,new State(new int[]{59,7,127,-6,130,-6,138,-6,148,-6,133,-6,146,-6,137,-6,134,-6,139,-6,143,-6,136,-6,131,-6,147,-6,145,-6,142,-6},new int[]{-7,6}));
    AddState(6,new State(-3));
    AddState(7,new State(-5));
    AddState(8,new State(new int[]{61,9}));
    AddState(9,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-10,10,-26,141,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(10,new State(new int[]{44,11,59,-8,127,-8,130,-8,138,-8,148,-8,133,-8,146,-8,137,-8,134,-8,139,-8,143,-8,136,-8,131,-8,147,-8,145,-8,142,-8}));
    AddState(11,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,12,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(12,new State(new int[]{42,13,47,15,37,17,43,19,45,21,94,23,154,25,60,27,62,29,151,31,150,33,152,35,153,37,156,39,155,41,44,-47,59,-47,127,-47,130,-47,138,-47,148,-47,133,-47,146,-47,137,-47,134,-47,139,-47,143,-47,136,-47,131,-47,147,-47,145,-47,142,-47,41,-47}));
    AddState(13,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,14,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(14,new State(new int[]{42,-58,47,-58,37,-58,43,-58,45,-58,94,23,154,-58,60,-58,62,-58,151,-58,150,-58,152,-58,153,-58,156,-58,155,-58,44,-58,59,-58,127,-58,130,-58,138,-58,148,-58,133,-58,146,-58,137,-58,134,-58,139,-58,143,-58,136,-58,131,-58,147,-58,145,-58,142,-58,41,-58,93,-58,125,-58,141,-58}));
    AddState(15,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,16,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(16,new State(new int[]{42,-59,47,-59,37,-59,43,-59,45,-59,94,23,154,-59,60,-59,62,-59,151,-59,150,-59,152,-59,153,-59,156,-59,155,-59,44,-59,59,-59,127,-59,130,-59,138,-59,148,-59,133,-59,146,-59,137,-59,134,-59,139,-59,143,-59,136,-59,131,-59,147,-59,145,-59,142,-59,41,-59,93,-59,125,-59,141,-59}));
    AddState(17,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,18,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(18,new State(new int[]{42,-60,47,-60,37,-60,43,-60,45,-60,94,23,154,-60,60,-60,62,-60,151,-60,150,-60,152,-60,153,-60,156,-60,155,-60,44,-60,59,-60,127,-60,130,-60,138,-60,148,-60,133,-60,146,-60,137,-60,134,-60,139,-60,143,-60,136,-60,131,-60,147,-60,145,-60,142,-60,41,-60,93,-60,125,-60,141,-60}));
    AddState(19,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,20,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(20,new State(new int[]{42,13,47,15,37,17,43,-61,45,-61,94,23,154,-61,60,-61,62,-61,151,-61,150,-61,152,-61,153,-61,156,39,155,-61,44,-61,59,-61,127,-61,130,-61,138,-61,148,-61,133,-61,146,-61,137,-61,134,-61,139,-61,143,-61,136,-61,131,-61,147,-61,145,-61,142,-61,41,-61,93,-61,125,-61,141,-61}));
    AddState(21,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,22,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(22,new State(new int[]{42,13,47,15,37,17,43,-62,45,-62,94,23,154,-62,60,-62,62,-62,151,-62,150,-62,152,-62,153,-62,156,39,155,-62,44,-62,59,-62,127,-62,130,-62,138,-62,148,-62,133,-62,146,-62,137,-62,134,-62,139,-62,143,-62,136,-62,131,-62,147,-62,145,-62,142,-62,41,-62,93,-62,125,-62,141,-62}));
    AddState(23,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,24,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(24,new State(-63));
    AddState(25,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,26,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(26,new State(new int[]{42,13,47,15,37,17,43,19,45,21,94,23,154,-64,60,-64,62,-64,151,-64,150,-64,152,-64,153,-64,156,39,155,41,44,-64,59,-64,127,-64,130,-64,138,-64,148,-64,133,-64,146,-64,137,-64,134,-64,139,-64,143,-64,136,-64,131,-64,147,-64,145,-64,142,-64,41,-64,93,-64,125,-64,141,-64}));
    AddState(27,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,28,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(28,new State(new int[]{42,13,47,15,37,17,43,19,45,21,94,23,154,25,60,-65,62,-65,151,-65,150,-65,152,-65,153,-65,156,39,155,41,44,-65,59,-65,127,-65,130,-65,138,-65,148,-65,133,-65,146,-65,137,-65,134,-65,139,-65,143,-65,136,-65,131,-65,147,-65,145,-65,142,-65,41,-65,93,-65,125,-65,141,-65}));
    AddState(29,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,30,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(30,new State(new int[]{42,13,47,15,37,17,43,19,45,21,94,23,154,25,60,-66,62,-66,151,-66,150,-66,152,-66,153,-66,156,39,155,41,44,-66,59,-66,127,-66,130,-66,138,-66,148,-66,133,-66,146,-66,137,-66,134,-66,139,-66,143,-66,136,-66,131,-66,147,-66,145,-66,142,-66,41,-66,93,-66,125,-66,141,-66}));
    AddState(31,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,32,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(32,new State(new int[]{42,13,47,15,37,17,43,19,45,21,94,23,154,25,60,-67,62,-67,151,-67,150,-67,152,-67,153,-67,156,39,155,41,44,-67,59,-67,127,-67,130,-67,138,-67,148,-67,133,-67,146,-67,137,-67,134,-67,139,-67,143,-67,136,-67,131,-67,147,-67,145,-67,142,-67,41,-67,93,-67,125,-67,141,-67}));
    AddState(33,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,34,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(34,new State(new int[]{42,13,47,15,37,17,43,19,45,21,94,23,154,25,60,-68,62,-68,151,-68,150,-68,152,-68,153,-68,156,39,155,41,44,-68,59,-68,127,-68,130,-68,138,-68,148,-68,133,-68,146,-68,137,-68,134,-68,139,-68,143,-68,136,-68,131,-68,147,-68,145,-68,142,-68,41,-68,93,-68,125,-68,141,-68}));
    AddState(35,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,36,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(36,new State(new int[]{42,13,47,15,37,17,43,19,45,21,94,23,154,25,60,-69,62,-69,151,-69,150,-69,152,-69,153,-69,156,39,155,41,44,-69,59,-69,127,-69,130,-69,138,-69,148,-69,133,-69,146,-69,137,-69,134,-69,139,-69,143,-69,136,-69,131,-69,147,-69,145,-69,142,-69,41,-69,93,-69,125,-69,141,-69}));
    AddState(37,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,38,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(38,new State(new int[]{42,13,47,15,37,17,43,19,45,21,94,23,154,25,60,-70,62,-70,151,-70,150,-70,152,-70,153,-70,156,39,155,41,44,-70,59,-70,127,-70,130,-70,138,-70,148,-70,133,-70,146,-70,137,-70,134,-70,139,-70,143,-70,136,-70,131,-70,147,-70,145,-70,142,-70,41,-70,93,-70,125,-70,141,-70}));
    AddState(39,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,40,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(40,new State(new int[]{42,-71,47,-71,37,-71,43,-71,45,-71,94,23,154,-71,60,-71,62,-71,151,-71,150,-71,152,-71,153,-71,156,-71,155,-71,44,-71,59,-71,127,-71,130,-71,138,-71,148,-71,133,-71,146,-71,137,-71,134,-71,139,-71,143,-71,136,-71,131,-71,147,-71,145,-71,142,-71,41,-71,93,-71,125,-71,141,-71}));
    AddState(41,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,42,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(42,new State(new int[]{42,13,47,15,37,17,43,-72,45,-72,94,23,154,-72,60,-72,62,-72,151,-72,150,-72,152,-72,153,-72,156,39,155,-72,44,-72,59,-72,127,-72,130,-72,138,-72,148,-72,133,-72,146,-72,137,-72,134,-72,139,-72,143,-72,136,-72,131,-72,147,-72,145,-72,142,-72,41,-72,93,-72,125,-72,141,-72}));
    AddState(43,new State(-49));
    AddState(44,new State(new int[]{129,45,46,46,42,-50,47,-50,37,-50,43,-50,45,-50,94,-50,154,-50,60,-50,62,-50,151,-50,150,-50,152,-50,153,-50,156,-50,155,-50,44,-50,59,-50,127,-50,130,-50,138,-50,148,-50,133,-50,146,-50,137,-50,134,-50,139,-50,143,-50,136,-50,131,-50,147,-50,145,-50,142,-50,41,-50,93,-50,125,-50,141,-50}));
    AddState(45,new State(-109));
    AddState(46,new State(new int[]{129,47}));
    AddState(47,new State(-110));
    AddState(48,new State(-111));
    AddState(49,new State(-51));
    AddState(50,new State(new int[]{42,-52,47,-52,37,-52,43,-52,45,-52,94,-52,154,-52,60,-52,62,-52,151,-52,150,-52,152,-52,153,-52,156,-52,155,-52,44,-52,59,-52,127,-52,130,-52,138,-52,148,-52,133,-52,146,-52,137,-52,134,-52,139,-52,143,-52,136,-52,131,-52,147,-52,145,-52,142,-52,41,-52,93,-52,125,-52,141,-52,91,-40,46,-40,58,-40,40,-40,123,-40,128,-40}));
    AddState(51,new State(-37));
    AddState(52,new State(-108));
    AddState(53,new State(new int[]{91,54,46,191,58,194,40,197,123,85,128,202},new int[]{-30,193,-29,201}));
    AddState(54,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-12,55,-26,57,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(55,new State(new int[]{93,56}));
    AddState(56,new State(-38));
    AddState(57,new State(new int[]{42,13,47,15,37,17,43,19,45,21,94,23,154,25,60,27,62,29,151,31,150,33,152,35,153,37,156,39,155,41,93,-48,138,-48,59,-48,127,-48,130,-48,148,-48,133,-48,146,-48,137,-48,134,-48,139,-48,143,-48,136,-48,131,-48,147,-48,145,-48,142,-48,141,-48,44,-48}));
    AddState(58,new State(new int[]{91,-41,46,-41,58,-41,40,-41,123,-41,128,-41,42,-55,47,-55,37,-55,43,-55,45,-55,94,-55,154,-55,60,-55,62,-55,151,-55,150,-55,152,-55,153,-55,156,-55,155,-55,44,-55,59,-55,127,-55,130,-55,138,-55,148,-55,133,-55,146,-55,137,-55,134,-55,139,-55,143,-55,136,-55,131,-55,147,-55,145,-55,142,-55,41,-55,93,-55,125,-55,141,-55}));
    AddState(59,new State(-53));
    AddState(60,new State(new int[]{40,61}));
    AddState(61,new State(new int[]{149,170,130,52,41,-24},new int[]{-17,62,-20,169,-1,171}));
    AddState(62,new State(new int[]{41,63}));
    AddState(63,new State(-4,new int[]{-8,64,-5,66}));
    AddState(64,new State(new int[]{131,65}));
    AddState(65,new State(-83));
    AddState(66,new State(new int[]{130,52,138,73,148,76,133,122,146,126,137,139,134,142,139,143,143,162,136,182,131,-7,147,-7,145,-7,142,-7},new int[]{-6,5,-9,8,-22,67,-1,51,-24,53,-11,72}));
    AddState(67,new State(new int[]{91,-40,46,-40,58,-40,40,-40,123,-40,128,-40,44,-36,61,-36},new int[]{-23,68}));
    AddState(68,new State(new int[]{44,69,61,-34}));
    AddState(69,new State(new int[]{130,52},new int[]{-22,70,-1,51,-24,53,-11,71}));
    AddState(70,new State(new int[]{44,-35,61,-35,91,-40,46,-40,58,-40,40,-40,123,-40,128,-40}));
    AddState(71,new State(-41));
    AddState(72,new State(new int[]{91,-41,46,-41,58,-41,40,-41,123,-41,128,-41,59,-9,127,-9,130,-9,138,-9,148,-9,133,-9,146,-9,137,-9,134,-9,139,-9,143,-9,136,-9,131,-9,147,-9,145,-9,142,-9}));
    AddState(73,new State(-4,new int[]{-8,74,-5,66}));
    AddState(74,new State(new int[]{131,75}));
    AddState(75,new State(-10));
    AddState(76,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-12,77,-26,57,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(77,new State(new int[]{138,78}));
    AddState(78,new State(-4,new int[]{-8,79,-5,66}));
    AddState(79,new State(new int[]{131,80}));
    AddState(80,new State(-11));
    AddState(81,new State(-54));
    AddState(82,new State(new int[]{130,52},new int[]{-1,83}));
    AddState(83,new State(-88));
    AddState(84,new State(-56));
    AddState(85,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108,91,96,59,-95,125,-95},new int[]{-33,86,-34,88,-36,113,-26,114,-2,44,-22,50,-1,118,-24,53,-11,58,-27,59,-28,81,-29,84,-35,119,-37,91,-39,92}));
    AddState(86,new State(new int[]{125,87}));
    AddState(87,new State(-89));
    AddState(88,new State(new int[]{59,89,125,-90}));
    AddState(89,new State(new int[]{91,96,130,52,125,-97},new int[]{-35,90,-37,91,-39,92,-1,110}));
    AddState(90,new State(-92));
    AddState(91,new State(-96));
    AddState(92,new State(-105,new int[]{-40,93}));
    AddState(93,new State(new int[]{44,94,59,-101,125,-101}));
    AddState(94,new State(new int[]{91,96,130,52,59,-100,125,-100},new int[]{-39,95,-1,110}));
    AddState(95,new State(-104));
    AddState(96,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,97,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(97,new State(new int[]{93,98,42,13,47,15,37,17,43,19,45,21,94,23,154,25,60,27,62,29,151,31,150,33,152,35,153,37,156,39,155,41}));
    AddState(98,new State(new int[]{61,99}));
    AddState(99,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,100,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(100,new State(new int[]{42,13,47,15,37,17,43,19,45,21,94,23,154,25,60,27,62,29,151,31,150,33,152,35,153,37,156,39,155,41,44,-106,59,-106,125,-106}));
    AddState(101,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,102,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(102,new State(new int[]{41,103,42,13,47,15,37,17,43,19,45,21,94,23,154,25,60,27,62,29,151,31,150,33,152,35,153,37,156,39,155,41}));
    AddState(103,new State(-57));
    AddState(104,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,105,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(105,new State(-73));
    AddState(106,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,107,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(107,new State(-74));
    AddState(108,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,109,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(109,new State(-75));
    AddState(110,new State(new int[]{61,111}));
    AddState(111,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-26,112,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(112,new State(new int[]{42,13,47,15,37,17,43,19,45,21,94,23,154,25,60,27,62,29,151,31,150,33,152,35,153,37,156,39,155,41,44,-107,59,-107,125,-107}));
    AddState(113,new State(-94));
    AddState(114,new State(new int[]{42,13,47,15,37,17,43,19,45,21,94,23,154,25,60,27,62,29,151,31,150,33,152,35,153,37,156,39,155,41,44,-103,59,-103,125,-103},new int[]{-38,115}));
    AddState(115,new State(new int[]{44,116,59,-99,125,-99}));
    AddState(116,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108,59,-98,125,-98},new int[]{-26,117,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(117,new State(new int[]{42,13,47,15,37,17,43,19,45,21,94,23,154,25,60,27,62,29,151,31,150,33,152,35,153,37,156,39,155,41,44,-102,59,-102,125,-102}));
    AddState(118,new State(new int[]{61,111,42,-37,47,-37,37,-37,43,-37,45,-37,94,-37,154,-37,60,-37,62,-37,151,-37,150,-37,152,-37,153,-37,156,-37,155,-37,44,-37,59,-37,125,-37,91,-37,46,-37,58,-37,40,-37,123,-37,128,-37}));
    AddState(119,new State(new int[]{59,120,125,-91}));
    AddState(120,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108,125,-95},new int[]{-34,121,-36,113,-26,114,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(121,new State(-93));
    AddState(122,new State(-4,new int[]{-8,123,-5,66}));
    AddState(123,new State(new int[]{147,124}));
    AddState(124,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-12,125,-26,57,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(125,new State(-12));
    AddState(126,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-12,127,-26,57,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(127,new State(new int[]{141,128}));
    AddState(128,new State(-4,new int[]{-8,129,-5,66}));
    AddState(129,new State(-28,new int[]{-13,130}));
    AddState(130,new State(new int[]{145,133,142,137,131,-30},new int[]{-14,131}));
    AddState(131,new State(new int[]{131,132}));
    AddState(132,new State(-13));
    AddState(133,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-12,134,-26,57,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(134,new State(new int[]{141,135}));
    AddState(135,new State(-4,new int[]{-8,136,-5,66}));
    AddState(136,new State(-27));
    AddState(137,new State(-4,new int[]{-8,138,-5,66}));
    AddState(138,new State(-29));
    AddState(139,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108,59,-14,127,-14,138,-14,148,-14,133,-14,146,-14,137,-14,134,-14,139,-14,136,-14,131,-14,147,-14,145,-14,142,-14},new int[]{-10,140,-26,141,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(140,new State(new int[]{44,11,59,-15,127,-15,130,-15,138,-15,148,-15,133,-15,146,-15,137,-15,134,-15,139,-15,143,-15,136,-15,131,-15,147,-15,145,-15,142,-15}));
    AddState(141,new State(new int[]{42,13,47,15,37,17,43,19,45,21,94,23,154,25,60,27,62,29,151,31,150,33,152,35,153,37,156,39,155,41,44,-46,59,-46,127,-46,130,-46,138,-46,148,-46,133,-46,146,-46,137,-46,134,-46,139,-46,143,-46,136,-46,131,-46,147,-46,145,-46,142,-46,41,-46}));
    AddState(142,new State(-16));
    AddState(143,new State(new int[]{130,52},new int[]{-1,144}));
    AddState(144,new State(new int[]{61,145,44,155}));
    AddState(145,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-12,146,-26,57,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(146,new State(new int[]{44,147}));
    AddState(147,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-12,148,-26,57,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(148,new State(new int[]{44,153,138,-22},new int[]{-15,149}));
    AddState(149,new State(new int[]{138,150}));
    AddState(150,new State(-4,new int[]{-8,151,-5,66}));
    AddState(151,new State(new int[]{131,152}));
    AddState(152,new State(-17));
    AddState(153,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-12,154,-26,57,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(154,new State(-21));
    AddState(155,new State(new int[]{130,52},new int[]{-1,156}));
    AddState(156,new State(new int[]{132,157}));
    AddState(157,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-12,158,-26,57,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(158,new State(new int[]{138,159}));
    AddState(159,new State(-4,new int[]{-8,160,-5,66}));
    AddState(160,new State(new int[]{131,161}));
    AddState(161,new State(-18));
    AddState(162,new State(new int[]{130,52},new int[]{-16,163,-1,177}));
    AddState(163,new State(new int[]{40,164}));
    AddState(164,new State(new int[]{149,170,130,52,41,-24},new int[]{-17,165,-20,169,-1,171}));
    AddState(165,new State(new int[]{41,166}));
    AddState(166,new State(-4,new int[]{-8,167,-5,66}));
    AddState(167,new State(new int[]{131,168}));
    AddState(168,new State(-19));
    AddState(169,new State(-23));
    AddState(170,new State(-84));
    AddState(171,new State(-44,new int[]{-25,172}));
    AddState(172,new State(new int[]{44,174,41,-87},new int[]{-32,173}));
    AddState(173,new State(-85));
    AddState(174,new State(new int[]{149,176,130,52},new int[]{-1,175}));
    AddState(175,new State(-43));
    AddState(176,new State(-86));
    AddState(177,new State(new int[]{46,178,58,180,40,-31}));
    AddState(178,new State(new int[]{130,52},new int[]{-1,179}));
    AddState(179,new State(-32));
    AddState(180,new State(new int[]{130,52},new int[]{-1,181}));
    AddState(181,new State(-33));
    AddState(182,new State(new int[]{130,52},new int[]{-18,183,-1,188}));
    AddState(183,new State(new int[]{61,186,59,-26,127,-26,130,-26,138,-26,148,-26,133,-26,146,-26,137,-26,134,-26,139,-26,143,-26,136,-26,131,-26,147,-26,145,-26,142,-26},new int[]{-19,184,-21,185}));
    AddState(184,new State(-20));
    AddState(185,new State(-25));
    AddState(186,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108},new int[]{-10,187,-26,141,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(187,new State(new int[]{44,11,59,-45,127,-45,130,-45,138,-45,148,-45,133,-45,146,-45,137,-45,134,-45,139,-45,143,-45,136,-45,131,-45,147,-45,145,-45,142,-45}));
    AddState(188,new State(-44,new int[]{-25,189}));
    AddState(189,new State(new int[]{44,190,61,-42,59,-42,127,-42,130,-42,138,-42,148,-42,133,-42,146,-42,137,-42,134,-42,139,-42,143,-42,136,-42,131,-42,147,-42,145,-42,142,-42}));
    AddState(190,new State(new int[]{130,52},new int[]{-1,175}));
    AddState(191,new State(new int[]{130,52},new int[]{-1,192}));
    AddState(192,new State(-39));
    AddState(193,new State(-76));
    AddState(194,new State(new int[]{130,52},new int[]{-1,195}));
    AddState(195,new State(new int[]{40,197,123,85,128,202},new int[]{-30,196,-29,201}));
    AddState(196,new State(-77));
    AddState(197,new State(new int[]{140,43,129,48,128,49,130,52,143,60,37,82,123,85,40,101,157,104,35,106,158,108,41,-82},new int[]{-31,198,-10,200,-26,141,-2,44,-22,50,-1,51,-24,53,-11,58,-27,59,-28,81,-29,84}));
    AddState(198,new State(new int[]{41,199}));
    AddState(199,new State(-78));
    AddState(200,new State(new int[]{44,11,41,-81}));
    AddState(201,new State(-79));
    AddState(202,new State(-80));

    Rule[] rules=new Rule[112];
    rules[1]=new Rule(-4, new int[]{-3,127});
    rules[2]=new Rule(-3, new int[]{-5,127});
    rules[3]=new Rule(-5, new int[]{-5,-6,-7});
    rules[4]=new Rule(-5, new int[]{});
    rules[5]=new Rule(-7, new int[]{59});
    rules[6]=new Rule(-7, new int[]{});
    rules[7]=new Rule(-8, new int[]{-5});
    rules[8]=new Rule(-6, new int[]{-9,61,-10});
    rules[9]=new Rule(-6, new int[]{-11});
    rules[10]=new Rule(-6, new int[]{138,-8,131});
    rules[11]=new Rule(-6, new int[]{148,-12,138,-8,131});
    rules[12]=new Rule(-6, new int[]{133,-8,147,-12});
    rules[13]=new Rule(-6, new int[]{146,-12,141,-8,-13,-14,131});
    rules[14]=new Rule(-6, new int[]{137});
    rules[15]=new Rule(-6, new int[]{137,-10});
    rules[16]=new Rule(-6, new int[]{134});
    rules[17]=new Rule(-6, new int[]{139,-1,61,-12,44,-12,-15,138,-8,131});
    rules[18]=new Rule(-6, new int[]{139,-1,44,-1,132,-12,138,-8,131});
    rules[19]=new Rule(-6, new int[]{143,-16,40,-17,41,-8,131});
    rules[20]=new Rule(-6, new int[]{136,-18,-19});
    rules[21]=new Rule(-15, new int[]{44,-12});
    rules[22]=new Rule(-15, new int[]{});
    rules[23]=new Rule(-17, new int[]{-20});
    rules[24]=new Rule(-17, new int[]{});
    rules[25]=new Rule(-19, new int[]{-21});
    rules[26]=new Rule(-19, new int[]{});
    rules[27]=new Rule(-13, new int[]{-13,145,-12,141,-8});
    rules[28]=new Rule(-13, new int[]{});
    rules[29]=new Rule(-14, new int[]{142,-8});
    rules[30]=new Rule(-14, new int[]{});
    rules[31]=new Rule(-16, new int[]{-1});
    rules[32]=new Rule(-16, new int[]{-1,46,-1});
    rules[33]=new Rule(-16, new int[]{-1,58,-1});
    rules[34]=new Rule(-9, new int[]{-22,-23});
    rules[35]=new Rule(-23, new int[]{-23,44,-22});
    rules[36]=new Rule(-23, new int[]{});
    rules[37]=new Rule(-22, new int[]{-1});
    rules[38]=new Rule(-22, new int[]{-24,91,-12,93});
    rules[39]=new Rule(-22, new int[]{-24,46,-1});
    rules[40]=new Rule(-24, new int[]{-22});
    rules[41]=new Rule(-24, new int[]{-11});
    rules[42]=new Rule(-18, new int[]{-1,-25});
    rules[43]=new Rule(-25, new int[]{-25,44,-1});
    rules[44]=new Rule(-25, new int[]{});
    rules[45]=new Rule(-21, new int[]{61,-10});
    rules[46]=new Rule(-10, new int[]{-26});
    rules[47]=new Rule(-10, new int[]{-10,44,-26});
    rules[48]=new Rule(-12, new int[]{-26});
    rules[49]=new Rule(-26, new int[]{140});
    rules[50]=new Rule(-26, new int[]{-2});
    rules[51]=new Rule(-26, new int[]{128});
    rules[52]=new Rule(-26, new int[]{-22});
    rules[53]=new Rule(-26, new int[]{-27});
    rules[54]=new Rule(-26, new int[]{-28});
    rules[55]=new Rule(-26, new int[]{-11});
    rules[56]=new Rule(-26, new int[]{-29});
    rules[57]=new Rule(-26, new int[]{40,-26,41});
    rules[58]=new Rule(-26, new int[]{-26,42,-26});
    rules[59]=new Rule(-26, new int[]{-26,47,-26});
    rules[60]=new Rule(-26, new int[]{-26,37,-26});
    rules[61]=new Rule(-26, new int[]{-26,43,-26});
    rules[62]=new Rule(-26, new int[]{-26,45,-26});
    rules[63]=new Rule(-26, new int[]{-26,94,-26});
    rules[64]=new Rule(-26, new int[]{-26,154,-26});
    rules[65]=new Rule(-26, new int[]{-26,60,-26});
    rules[66]=new Rule(-26, new int[]{-26,62,-26});
    rules[67]=new Rule(-26, new int[]{-26,151,-26});
    rules[68]=new Rule(-26, new int[]{-26,150,-26});
    rules[69]=new Rule(-26, new int[]{-26,152,-26});
    rules[70]=new Rule(-26, new int[]{-26,153,-26});
    rules[71]=new Rule(-26, new int[]{-26,156,-26});
    rules[72]=new Rule(-26, new int[]{-26,155,-26});
    rules[73]=new Rule(-26, new int[]{157,-26});
    rules[74]=new Rule(-26, new int[]{35,-26});
    rules[75]=new Rule(-26, new int[]{158,-26});
    rules[76]=new Rule(-11, new int[]{-24,-30});
    rules[77]=new Rule(-11, new int[]{-24,58,-1,-30});
    rules[78]=new Rule(-30, new int[]{40,-31,41});
    rules[79]=new Rule(-30, new int[]{-29});
    rules[80]=new Rule(-30, new int[]{128});
    rules[81]=new Rule(-31, new int[]{-10});
    rules[82]=new Rule(-31, new int[]{});
    rules[83]=new Rule(-27, new int[]{143,40,-17,41,-8,131});
    rules[84]=new Rule(-20, new int[]{149});
    rules[85]=new Rule(-20, new int[]{-1,-25,-32});
    rules[86]=new Rule(-32, new int[]{44,149});
    rules[87]=new Rule(-32, new int[]{});
    rules[88]=new Rule(-28, new int[]{37,-1});
    rules[89]=new Rule(-29, new int[]{123,-33,125});
    rules[90]=new Rule(-33, new int[]{-34});
    rules[91]=new Rule(-33, new int[]{-35});
    rules[92]=new Rule(-33, new int[]{-34,59,-35});
    rules[93]=new Rule(-33, new int[]{-35,59,-34});
    rules[94]=new Rule(-34, new int[]{-36});
    rules[95]=new Rule(-34, new int[]{});
    rules[96]=new Rule(-35, new int[]{-37});
    rules[97]=new Rule(-35, new int[]{});
    rules[98]=new Rule(-36, new int[]{-26,-38,44});
    rules[99]=new Rule(-36, new int[]{-26,-38});
    rules[100]=new Rule(-37, new int[]{-39,-40,44});
    rules[101]=new Rule(-37, new int[]{-39,-40});
    rules[102]=new Rule(-38, new int[]{-38,44,-26});
    rules[103]=new Rule(-38, new int[]{});
    rules[104]=new Rule(-40, new int[]{-40,44,-39});
    rules[105]=new Rule(-40, new int[]{});
    rules[106]=new Rule(-39, new int[]{91,-26,93,61,-26});
    rules[107]=new Rule(-39, new int[]{-1,61,-26});
    rules[108]=new Rule(-1, new int[]{130});
    rules[109]=new Rule(-2, new int[]{-2,129});
    rules[110]=new Rule(-2, new int[]{-2,46,129});
    rules[111]=new Rule(-2, new int[]{129});
    this.InitRules(rules);

    this.InitNonTerminals(new string[] {"", "NAME", "NUMBER", "PROGRAM", "$accept", 
      "CHUNK", "STAT", "COMMA", "BLOCK", "VARLIST1", "EXPLIST1", "FUNCTION_CALL", 
      "EXP1", "ELSEIF_LIST", "ELSE_LIST", "EXPTEMP", "FUNCNAME", "PL_OPT", "DECLIST", 
      "INIT_OPT", "PARLIST1", "INIT", "VAR", "VAR_LIST", "VARORFUNC", "NAME_LIST", 
      "EXP", "FUNCTION", "UPVALUE", "TABLE_CONSTRUCTOR", "ARGS", "EXP_LIST_OPT", 
      "SMTH_OPT", "FIELDLIST", "LFIELDLIST", "FFIELDLIST", "LFIELDLIST1", "FFIELDLIST1", 
      "LST", "FFIELD", "FST", });
  }

  protected override void DoAction(int action)
  {
    switch (action)
    {
      case 50: // EXP -> NUMBER
{Console.Error.WriteLine("?enei naiaioeea: {0}", ValueStack[ValueStack.Depth-1].d);}
        break;
      case 108: // NAME -> identifer
{ ids[ids_index] = ValueStack[ValueStack.Depth-1].s; ids_index++; CurrentSemanticValue.s = ValueStack[ValueStack.Depth-1].s; }
        break;
      case 109: // NUMBER -> NUMBER, digit
{ if (_baseNumber == 0) {CurrentSemanticValue.d = ValueStack[ValueStack.Depth-2].d * 10 + ValueStack[ValueStack.Depth-1].i;} else {CurrentSemanticValue.d = ValueStack[ValueStack.Depth-2].d + ValueStack[ValueStack.Depth-1].i * _baseNumber; _baseNumber*=0.1;} }
        break;
      case 110: // NUMBER -> NUMBER, '.', digit
{ _baseNumber = 0.1;CurrentSemanticValue.d = ValueStack[ValueStack.Depth-3].d + ValueStack[ValueStack.Depth-2].d * _baseNumber;}
        break;
      case 111: // NUMBER -> digit
{ CurrentSemanticValue.d = ValueStack[ValueStack.Depth-1].i; _baseNumber = 0; }
        break;
    }
  }

  protected override string TerminalToString(int terminal)
  {
    if (aliasses != null && aliasses.ContainsKey(terminal))
        return aliasses[terminal];
    else if (((Tokens)terminal).ToString() != terminal.ToString(CultureInfo.InvariantCulture))
        return ((Tokens)terminal).ToString();
    else
        return CharToString((char)terminal);
  }

public Parser() : base(null) { }
}
}
