Entering state 0 
Reducing stack by rule 4, /* empty */ -> CHUNK
State now 0
Entering state 3 
Reading a token: functionT
Next token is functionT
Shifting token functionT, Entering state 158 
Reading a token: Identifer TestCycles
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 106, identifer -> NAME
State now 0 3 158
Entering state 173 
Reading a token: (
Next token is '('
Reducing stack by rule 31, NAME -> FUNCNAME
State now 0 3 158
Entering state 159 
Next token is '('
Shifting token '(', Entering state 160 
Reading a token: )
Next token is ')'
Reducing stack by rule 24, /* empty */ -> PL_OPT
State now 0 3 158 159 160
Entering state 161 
Next token is ')'
Shifting token ')', Entering state 162 
Reducing stack by rule 4, /* empty */ -> CHUNK
State now 0 3 158 159 160 161 162
Entering state 66 
Reading a token: eol
Identifer arr
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 106, identifer -> NAME
State now 0 3 158 159 160 161 162 66
Entering state 51 
Reducing stack by rule 37, NAME -> VAR
State now 0 3 158 159 160 161 162 66
Entering state 67 
Reading a token: =
Next token is '='
Reducing stack by rule 36, /* empty */ -> VAR_LIST
State now 0 3 158 159 160 161 162 66 67
Entering state 68 
Next token is '='
Reducing stack by rule 34, VAR VAR_LIST -> VARLIST1
State now 0 3 158 159 160 161 162 66
Entering state 8 
Next token is '='
Shifting token '=', Entering state 9 
Reading a token: {
Next token is '{'
Shifting token '{', Entering state 85 
Reading a token: Digit:1
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 109, digit -> NUMBER
State now 0 3 158 159 160 161 162 66 8 9 85
Entering state 44 
Reading a token: ,
Next token is ','
Reducing stack by rule 50, NUMBER -> EXP
State now 0 3 158 159 160 161 162 66 8 9 85
Entering state 90 
Next token is ','
Reducing stack by rule 101, /* empty */ -> LST
State now 0 3 158 159 160 161 162 66 8 9 85 90
Entering state 91 
Next token is ','
Shifting token ',', Entering state 92 
Reading a token: Digit:2
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 109, digit -> NUMBER
State now 0 3 158 159 160 161 162 66 8 9 85 90 91 92
Entering state 44 
Reading a token: ,
Next token is ','
Reducing stack by rule 50, NUMBER -> EXP
State now 0 3 158 159 160 161 162 66 8 9 85 90 91 92
Entering state 93 
Next token is ','
Reducing stack by rule 100, LST ',' EXP -> LST
State now 0 3 158 159 160 161 162 66 8 9 85 90
Entering state 91 
Next token is ','
Shifting token ',', Entering state 92 
Reading a token: Digit:3
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 109, digit -> NUMBER
State now 0 3 158 159 160 161 162 66 8 9 85 90 91 92
Entering state 44 
Reading a token: ,
Next token is ','
Reducing stack by rule 50, NUMBER -> EXP
State now 0 3 158 159 160 161 162 66 8 9 85 90 91 92
Entering state 93 
Next token is ','
Reducing stack by rule 100, LST ',' EXP -> LST
State now 0 3 158 159 160 161 162 66 8 9 85 90
Entering state 91 
Next token is ','
Shifting token ',', Entering state 92 
Reading a token: Digit:4
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 109, digit -> NUMBER
State now 0 3 158 159 160 161 162 66 8 9 85 90 91 92
Entering state 44 
Reading a token: ,
Next token is ','
Reducing stack by rule 50, NUMBER -> EXP
State now 0 3 158 159 160 161 162 66 8 9 85 90 91 92
Entering state 93 
Next token is ','
Reducing stack by rule 100, LST ',' EXP -> LST
State now 0 3 158 159 160 161 162 66 8 9 85 90
Entering state 91 
Next token is ','
Shifting token ',', Entering state 92 
Reading a token: Digit:7
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 109, digit -> NUMBER
State now 0 3 158 159 160 161 162 66 8 9 85 90 91 92
Entering state 44 
Reading a token: ,
Next token is ','
Reducing stack by rule 50, NUMBER -> EXP
State now 0 3 158 159 160 161 162 66 8 9 85 90 91 92
Entering state 93 
Next token is ','
Reducing stack by rule 100, LST ',' EXP -> LST
State now 0 3 158 159 160 161 162 66 8 9 85 90
Entering state 91 
Next token is ','
Shifting token ',', Entering state 92 
Reading a token: Digit:1
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 109, digit -> NUMBER
State now 0 3 158 159 160 161 162 66 8 9 85 90 91 92
Entering state 44 
Reading a token: Digit:0
Next token is digit
Shifting token digit, Entering state 45 
Reducing stack by rule 107, NUMBER digit -> NUMBER
State now 0 3 158 159 160 161 162 66 8 9 85 90 91 92
Entering state 44 
Reading a token: ,
Next token is ','
Reducing stack by rule 50, NUMBER -> EXP
State now 0 3 158 159 160 161 162 66 8 9 85 90 91 92
Entering state 93 
Next token is ','
Reducing stack by rule 100, LST ',' EXP -> LST
State now 0 3 158 159 160 161 162 66 8 9 85 90
Entering state 91 
Next token is ','
Shifting token ',', Entering state 92 
Reading a token: Digit:1
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 109, digit -> NUMBER
State now 0 3 158 159 160 161 162 66 8 9 85 90 91 92
Entering state 44 
Reading a token: Digit:5
Next token is digit
Shifting token digit, Entering state 45 
Reducing stack by rule 107, NUMBER digit -> NUMBER
State now 0 3 158 159 160 161 162 66 8 9 85 90 91 92
Entering state 44 
Reading a token: }
Next token is '}'
Reducing stack by rule 50, NUMBER -> EXP
State now 0 3 158 159 160 161 162 66 8 9 85 90 91 92
Entering state 93 
Next token is '}'
Reducing stack by rule 100, LST ',' EXP -> LST
State now 0 3 158 159 160 161 162 66 8 9 85 90
Entering state 91 
Next token is '}'
Reducing stack by rule 97, EXP LST -> LFIELDLIST1
State now 0 3 158 159 160 161 162 66 8 9 85
Entering state 89 
Reducing stack by rule 92, LFIELDLIST1 -> LFIELDLIST
State now 0 3 158 159 160 161 162 66 8 9 85
Entering state 88 
Reducing stack by rule 90, LFIELDLIST -> FIELDLIST
State now 0 3 158 159 160 161 162 66 8 9 85
Entering state 86 
Next token is '}'
Shifting token '}', Entering state 87 
Reducing stack by rule 89, '{' FIELDLIST '}' -> TABLE_CONSTRUCTOR
State now 0 3 158 159 160 161 162 66 8 9
Entering state 84 
Reducing stack by rule 56, TABLE_CONSTRUCTOR -> EXP
State now 0 3 158 159 160 161 162 66 8 9
Entering state 137 
Reading a token: ;
Next token is ';'
Reducing stack by rule 46, EXP -> EXPLIST1
State now 0 3 158 159 160 161 162 66 8 9
Entering state 10 
Next token is ';'
Reducing stack by rule 8, VARLIST1 '=' EXPLIST1 -> STAT
State now 0 3 158 159 160 161 162 66
Entering state 5 
Next token is ';'
Shifting token ';', Entering state 7 
Reducing stack by rule 5, ';' -> COMMA
State now 0 3 158 159 160 161 162 66 5
Entering state 6 
Reducing stack by rule 3, CHUNK STAT COMMA -> CHUNK
State now 0 3 158 159 160 161 162
Entering state 66 
Reading a token: eol
Identifer res
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 106, identifer -> NAME
State now 0 3 158 159 160 161 162 66
Entering state 51 
Reducing stack by rule 37, NAME -> VAR
State now 0 3 158 159 160 161 162 66
Entering state 67 
Reading a token: =
Next token is '='
Reducing stack by rule 36, /* empty */ -> VAR_LIST
State now 0 3 158 159 160 161 162 66 67
Entering state 68 
Next token is '='
Reducing stack by rule 34, VAR VAR_LIST -> VARLIST1
State now 0 3 158 159 160 161 162 66
Entering state 8 
Next token is '='
Shifting token '=', Entering state 9 
Reading a token: Digit:0
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 109, digit -> NUMBER
State now 0 3 158 159 160 161 162 66 8 9
Entering state 44 
Reading a token: ;
Next token is ';'
Reducing stack by rule 50, NUMBER -> EXP
State now 0 3 158 159 160 161 162 66 8 9
Entering state 137 
Next token is ';'
Reducing stack by rule 46, EXP -> EXPLIST1
State now 0 3 158 159 160 161 162 66 8 9
Entering state 10 
Next token is ';'
Reducing stack by rule 8, VARLIST1 '=' EXPLIST1 -> STAT
State now 0 3 158 159 160 161 162 66
Entering state 5 
Next token is ';'
Shifting token ';', Entering state 7 
Reducing stack by rule 5, ';' -> COMMA
State now 0 3 158 159 160 161 162 66 5
Entering state 6 
Reducing stack by rule 3, CHUNK STAT COMMA -> CHUNK
State now 0 3 158 159 160 161 162
Entering state 66 
Reading a token: eol
Identifer i
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 106, identifer -> NAME
State now 0 3 158 159 160 161 162 66
Entering state 51 
Reducing stack by rule 37, NAME -> VAR
State now 0 3 158 159 160 161 162 66
Entering state 67 
Reading a token: =
Next token is '='
Reducing stack by rule 36, /* empty */ -> VAR_LIST
State now 0 3 158 159 160 161 162 66 67
Entering state 68 
Next token is '='
Reducing stack by rule 34, VAR VAR_LIST -> VARLIST1
State now 0 3 158 159 160 161 162 66
Entering state 8 
Next token is '='
Shifting token '=', Entering state 9 
Reading a token: Digit:1
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 109, digit -> NUMBER
State now 0 3 158 159 160 161 162 66 8 9
Entering state 44 
Reading a token: ;
Next token is ';'
Reducing stack by rule 50, NUMBER -> EXP
State now 0 3 158 159 160 161 162 66 8 9
Entering state 137 
Next token is ';'
Reducing stack by rule 46, EXP -> EXPLIST1
State now 0 3 158 159 160 161 162 66 8 9
Entering state 10 
Next token is ';'
Reducing stack by rule 8, VARLIST1 '=' EXPLIST1 -> STAT
State now 0 3 158 159 160 161 162 66
Entering state 5 
Next token is ';'
Shifting token ';', Entering state 7 
Reducing stack by rule 5, ';' -> COMMA
State now 0 3 158 159 160 161 162 66 5
Entering state 6 
Reducing stack by rule 3, CHUNK STAT COMMA -> CHUNK
State now 0 3 158 159 160 161 162
Entering state 66 
Reading a token: eol
whileT
Next token is whileT
Shifting token whileT, Entering state 76 
Reading a token: (
Next token is '('
Shifting token '(', Entering state 94 
Reading a token: Identifer i
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 106, identifer -> NAME
State now 0 3 158 159 160 161 162 66 76 94
Entering state 51 
Reducing stack by rule 37, NAME -> VAR
State now 0 3 158 159 160 161 162 66 76 94
Entering state 50 
Reading a token: <
Next token is '<'
Reducing stack by rule 52, VAR -> EXP
State now 0 3 158 159 160 161 162 66 76 94
Entering state 95 
Next token is '<'
Shifting token '<', Entering state 27 
Reading a token: Digit:8
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 109, digit -> NUMBER
State now 0 3 158 159 160 161 162 66 76 94 95 27
Entering state 44 
Reading a token: )
Next token is ')'
Reducing stack by rule 50, NUMBER -> EXP
State now 0 3 158 159 160 161 162 66 76 94 95 27
Entering state 28 
Next token is ')'
Reducing stack by rule 65, EXP '<' EXP -> EXP
State now 0 3 158 159 160 161 162 66 76 94
Entering state 95 
Next token is ')'
Shifting token ')', Entering state 96 
Reducing stack by rule 57, '(' EXP ')' -> EXP
State now 0 3 158 159 160 161 162 66 76
Entering state 57 
Reading a token: doT
Next token is doT
Reducing stack by rule 48, EXP -> EXP1
State now 0 3 158 159 160 161 162 66 76
Entering state 77 
Next token is doT
Shifting token doT, Entering state 78 
Reducing stack by rule 4, /* empty */ -> CHUNK
State now 0 3 158 159 160 161 162 66 76 77 78
Entering state 66 
Reading a token: eol
Identifer res
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 106, identifer -> NAME
State now 0 3 158 159 160 161 162 66 76 77 78 66
Entering state 51 
Reducing stack by rule 37, NAME -> VAR
State now 0 3 158 159 160 161 162 66 76 77 78 66
Entering state 67 
Reading a token: =
Next token is '='
Reducing stack by rule 36, /* empty */ -> VAR_LIST
State now 0 3 158 159 160 161 162 66 76 77 78 66 67
Entering state 68 
Next token is '='
Reducing stack by rule 34, VAR VAR_LIST -> VARLIST1
State now 0 3 158 159 160 161 162 66 76 77 78 66
Entering state 8 
Next token is '='
Shifting token '=', Entering state 9 
Reading a token: Identifer res
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 106, identifer -> NAME
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9
Entering state 51 
Reducing stack by rule 37, NAME -> VAR
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9
Entering state 50 
Reading a token: +
Next token is '+'
Reducing stack by rule 52, VAR -> EXP
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9
Entering state 137 
Next token is '+'
Shifting token '+', Entering state 19 
Reading a token: Identifer arr
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 106, identifer -> NAME
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9 137 19
Entering state 51 
Reducing stack by rule 37, NAME -> VAR
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9 137 19
Entering state 50 
Reading a token: [
Next token is '{'
Reducing stack by rule 40, VAR -> VARORFUNC
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9 137 19
Entering state 53 
Next token is '{'
Shifting token '{', Entering state 85 
Reading a token: Identifer i
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 106, identifer -> NAME
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9 137 19 53 85
Entering state 103 
Reading a token: ]
Next token is '}'
Reducing stack by rule 37, NAME -> VAR
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9 137 19 53 85
Entering state 50 
Next token is '}'
Reducing stack by rule 52, VAR -> EXP
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9 137 19 53 85
Entering state 90 
Next token is '}'
Reducing stack by rule 101, /* empty */ -> LST
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9 137 19 53 85 90
Entering state 91 
Next token is '}'
Reducing stack by rule 97, EXP LST -> LFIELDLIST1
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9 137 19 53 85
Entering state 89 
Reducing stack by rule 92, LFIELDLIST1 -> LFIELDLIST
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9 137 19 53 85
Entering state 88 
Reducing stack by rule 90, LFIELDLIST -> FIELDLIST
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9 137 19 53 85
Entering state 86 
Next token is '}'
Shifting token '}', Entering state 87 
Reducing stack by rule 89, '{' FIELDLIST '}' -> TABLE_CONSTRUCTOR
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9 137 19 53
Entering state 197 
Reducing stack by rule 79, TABLE_CONSTRUCTOR -> ARGS
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9 137 19 53
Entering state 189 
Reducing stack by rule 76, VARORFUNC ARGS -> FUNCTION_CALL
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9 137 19
Entering state 58 
Reading a token: ;
Next token is ';'
Reducing stack by rule 55, FUNCTION_CALL -> EXP
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9 137 19
Entering state 20 
Next token is ';'
Reducing stack by rule 61, EXP '+' EXP -> EXP
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9
Entering state 137 
Next token is ';'
Reducing stack by rule 46, EXP -> EXPLIST1
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9
Entering state 10 
Next token is ';'
Reducing stack by rule 8, VARLIST1 '=' EXPLIST1 -> STAT
State now 0 3 158 159 160 161 162 66 76 77 78 66
Entering state 5 
Next token is ';'
Shifting token ';', Entering state 7 
Reducing stack by rule 5, ';' -> COMMA
State now 0 3 158 159 160 161 162 66 76 77 78 66 5
Entering state 6 
Reducing stack by rule 3, CHUNK STAT COMMA -> CHUNK
State now 0 3 158 159 160 161 162 66 76 77 78
Entering state 66 
Reading a token: eol
Identifer i
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 106, identifer -> NAME
State now 0 3 158 159 160 161 162 66 76 77 78 66
Entering state 51 
Reducing stack by rule 37, NAME -> VAR
State now 0 3 158 159 160 161 162 66 76 77 78 66
Entering state 67 
Reading a token: =
Next token is '='
Reducing stack by rule 36, /* empty */ -> VAR_LIST
State now 0 3 158 159 160 161 162 66 76 77 78 66 67
Entering state 68 
Next token is '='
Reducing stack by rule 34, VAR VAR_LIST -> VARLIST1
State now 0 3 158 159 160 161 162 66 76 77 78 66
Entering state 8 
Next token is '='
Shifting token '=', Entering state 9 
Reading a token: Identifer i
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 106, identifer -> NAME
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9
Entering state 51 
Reducing stack by rule 37, NAME -> VAR
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9
Entering state 50 
Reading a token: +
Next token is '+'
Reducing stack by rule 52, VAR -> EXP
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9
Entering state 137 
Next token is '+'
Shifting token '+', Entering state 19 
Reading a token: Digit:1
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 109, digit -> NUMBER
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9 137 19
Entering state 44 
Reading a token: ;
Next token is ';'
Reducing stack by rule 50, NUMBER -> EXP
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9 137 19
Entering state 20 
Next token is ';'
Reducing stack by rule 61, EXP '+' EXP -> EXP
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9
Entering state 137 
Next token is ';'
Reducing stack by rule 46, EXP -> EXPLIST1
State now 0 3 158 159 160 161 162 66 76 77 78 66 8 9
Entering state 10 
Next token is ';'
Reducing stack by rule 8, VARLIST1 '=' EXPLIST1 -> STAT
State now 0 3 158 159 160 161 162 66 76 77 78 66
Entering state 5 
Next token is ';'
Shifting token ';', Entering state 7 
Reducing stack by rule 5, ';' -> COMMA
State now 0 3 158 159 160 161 162 66 76 77 78 66 5
Entering state 6 
Reducing stack by rule 3, CHUNK STAT COMMA -> CHUNK
State now 0 3 158 159 160 161 162 66 76 77 78
Entering state 66 
Reading a token: eol
end
Next token is end
Reducing stack by rule 7, CHUNK -> BLOCK
State now 0 3 158 159 160 161 162 66 76 77 78
Entering state 79 
Next token is end
Shifting token end, Entering state 80 
Reducing stack by rule 11, whileT EXP1 doT BLOCK end -> STAT
State now 0 3 158 159 160 161 162 66
Entering state 5 
Reading a token: eol
returnT
Next token is returnT
Reducing stack by rule 6, /* empty */ -> COMMA
State now 0 3 158 159 160 161 162 66 5
Entering state 6 
Reducing stack by rule 3, CHUNK STAT COMMA -> CHUNK
State now 0 3 158 159 160 161 162
Entering state 66 
Next token is returnT
Shifting token returnT, Entering state 135 
Reading a token: Identifer res
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 106, identifer -> NAME
State now 0 3 158 159 160 161 162 66 135
Entering state 51 
Reducing stack by rule 37, NAME -> VAR
State now 0 3 158 159 160 161 162 66 135
Entering state 50 
Reading a token: ;
Next token is ';'
Reducing stack by rule 52, VAR -> EXP
State now 0 3 158 159 160 161 162 66 135
Entering state 137 
Next token is ';'
Reducing stack by rule 46, EXP -> EXPLIST1
State now 0 3 158 159 160 161 162 66 135
Entering state 136 
Next token is ';'
Reducing stack by rule 15, returnT EXPLIST1 -> STAT
State now 0 3 158 159 160 161 162 66
Entering state 5 
Next token is ';'
Shifting token ';', Entering state 7 
Reducing stack by rule 5, ';' -> COMMA
State now 0 3 158 159 160 161 162 66 5
Entering state 6 
Reducing stack by rule 3, CHUNK STAT COMMA -> CHUNK
State now 0 3 158 159 160 161 162
Entering state 66 
Reading a token: eol
end
Next token is end
Reducing stack by rule 7, CHUNK -> BLOCK
State now 0 3 158 159 160 161 162
Entering state 163 
Next token is end
Shifting token end, Entering state 164 
Reducing stack by rule 19, functionT FUNCNAME '(' PL_OPT ')' BLOCK end -> STAT
State now 0 3
Entering state 5 
Reading a token: Next token is EOF
Reducing stack by rule 6, /* empty */ -> COMMA
State now 0 3 5
Entering state 6 
Reducing stack by rule 3, CHUNK STAT COMMA -> CHUNK
State now 0
Entering state 3 
Next token is EOF
Shifting token EOF, Entering state 4 
Reducing stack by rule 2, CHUNK EOF -> PROGRAM
State now 0
Entering state 1 
Next token is EOF
Shifting token EOF, Entering state 2 
Reducing stack by rule 1, PROGRAM EOF -> $accept
State now 0
