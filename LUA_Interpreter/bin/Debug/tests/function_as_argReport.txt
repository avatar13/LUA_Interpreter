Entering state 0 
Reducing stack by rule 4, /* empty */ -> CHUNK
State now 0
Entering state 3 
Reading a token: functionT
Next token is functionT
Shifting token functionT, Entering state 174 
Reading a token: Identifer giveme_str
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 122, identifer -> NAME
State now 0 3 174
Entering state 191 
Reading a token: (
Next token is '('
Reducing stack by rule 45, NAME -> FUNCNAME
State now 0 3 174
Entering state 175 
Next token is '('
Shifting token '(', Entering state 176 
Reading a token: )
Next token is ')'
Reducing stack by rule 38, /* empty */ -> PL_OPT
State now 0 3 174 175 176
Entering state 177 
Next token is ')'
Shifting token ')', Entering state 178 
Reducing stack by rule 31, /* empty */ -> Anon@13
State now 0 3 174 175 176 177 178
Entering state 179 
Reducing stack by rule 4, /* empty */ -> CHUNK
State now 0 3 174 175 176 177 178 179
Entering state 66 
Reading a token: eol
returnT
Next token is returnT
Shifting token returnT, Entering state 147 
Reading a token: string "Hello!"
Next token is str
Shifting token str, Entering state 49 
Reducing stack by rule 65, str -> EXP
State now 0 3 174 175 176 177 178 179 66 147
Entering state 149 
Reading a token: ;
Next token is ';'
Reducing stack by rule 60, EXP -> EXPLIST1
State now 0 3 174 175 176 177 178 179 66 147
Entering state 148 
Next token is ';'
Reducing stack by rule 23, returnT EXPLIST1 -> STAT
State now 0 3 174 175 176 177 178 179 66
Entering state 5 
Next token is ';'
Shifting token ';', Entering state 7 
Reducing stack by rule 5, ';' -> COMMA
State now 0 3 174 175 176 177 178 179 66 5
Entering state 6 
Reducing stack by rule 3, CHUNK STAT COMMA -> CHUNK
State now 0 3 174 175 176 177 178 179
Entering state 66 
Reading a token: eol
end
Next token is end
Reducing stack by rule 7, CHUNK -> BLOCK
State now 0 3 174 175 176 177 178 179
Entering state 180 
Reducing stack by rule 32, /* empty */ -> Anon@14
State now 0 3 174 175 176 177 178 179 180
Entering state 181 
Next token is end
Shifting token end, Entering state 182 
Reducing stack by rule 33, functionT FUNCNAME '(' PL_OPT ')' Anon@13 BLOCK Anon@14 end -> STAT
State now 0 3
Entering state 5 
Reading a token: eol
eol
functionT
Next token is functionT
Reducing stack by rule 6, /* empty */ -> COMMA
State now 0 3 5
Entering state 6 
Reducing stack by rule 3, CHUNK STAT COMMA -> CHUNK
State now 0
Entering state 3 
Next token is functionT
Shifting token functionT, Entering state 174 
Reading a token: Identifer lol
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 122, identifer -> NAME
State now 0 3 174
Entering state 191 
Reading a token: (
Next token is '('
Reducing stack by rule 45, NAME -> FUNCNAME
State now 0 3 174
Entering state 175 
Next token is '('
Shifting token '(', Entering state 176 
Reading a token: Identifer str
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 122, identifer -> NAME
State now 0 3 174 175 176
Entering state 185 
Reducing stack by rule 58, /* empty */ -> NAME_LIST
State now 0 3 174 175 176 185
Entering state 186 
Reading a token: )
Next token is ')'
Reducing stack by rule 101, /* empty */ -> SMTH_OPT
State now 0 3 174 175 176 185 186
Entering state 187 
Reducing stack by rule 99, NAME NAME_LIST SMTH_OPT -> PARLIST1
State now 0 3 174 175 176
Entering state 183 
Reducing stack by rule 37, PARLIST1 -> PL_OPT
State now 0 3 174 175 176
Entering state 177 
Next token is ')'
Shifting token ')', Entering state 178 
Reducing stack by rule 31, /* empty */ -> Anon@13
State now 0 3 174 175 176 177 178
Entering state 179 
Reducing stack by rule 4, /* empty */ -> CHUNK
State now 0 3 174 175 176 177 178 179
Entering state 66 
Reading a token: eol
Identifer print
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 122, identifer -> NAME
State now 0 3 174 175 176 177 178 179 66
Entering state 51 
Reducing stack by rule 51, NAME -> VAR
State now 0 3 174 175 176 177 178 179 66
Entering state 67 
Reading a token: (
Next token is '('
Reducing stack by rule 54, VAR -> VARORFUNC
State now 0 3 174 175 176 177 178 179 66
Entering state 53 
Next token is '('
Shifting token '(', Entering state 211 
Reading a token: Identifer str
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 122, identifer -> NAME
State now 0 3 174 175 176 177 178 179 66 53 211
Entering state 51 
Reducing stack by rule 51, NAME -> VAR
State now 0 3 174 175 176 177 178 179 66 53 211
Entering state 50 
Reading a token: )
Next token is ')'
Reducing stack by rule 66, VAR -> EXP
State now 0 3 174 175 176 177 178 179 66 53 211
Entering state 149 
Next token is ')'
Reducing stack by rule 60, EXP -> EXPLIST1
State now 0 3 174 175 176 177 178 179 66 53 211
Entering state 214 
Next token is ')'
Reducing stack by rule 95, EXPLIST1 -> EXP_LIST_OPT
State now 0 3 174 175 176 177 178 179 66 53 211
Entering state 212 
Next token is ')'
Shifting token ')', Entering state 213 
Reducing stack by rule 92, '(' EXP_LIST_OPT ')' -> ARGS
State now 0 3 174 175 176 177 178 179 66 53
Entering state 207 
Reducing stack by rule 90, VARORFUNC ARGS -> FUNCTION_CALL
State now 0 3 174 175 176 177 178 179 66
Entering state 72 
Reading a token: ;
Next token is ';'
Reducing stack by rule 9, FUNCTION_CALL -> STAT
State now 0 3 174 175 176 177 178 179 66
Entering state 5 
Next token is ';'
Shifting token ';', Entering state 7 
Reducing stack by rule 5, ';' -> COMMA
State now 0 3 174 175 176 177 178 179 66 5
Entering state 6 
Reducing stack by rule 3, CHUNK STAT COMMA -> CHUNK
State now 0 3 174 175 176 177 178 179
Entering state 66 
Reading a token: eol
end
Next token is end
Reducing stack by rule 7, CHUNK -> BLOCK
State now 0 3 174 175 176 177 178 179
Entering state 180 
Reducing stack by rule 32, /* empty */ -> Anon@14
State now 0 3 174 175 176 177 178 179 180
Entering state 181 
Next token is end
Shifting token end, Entering state 182 
Reducing stack by rule 33, functionT FUNCNAME '(' PL_OPT ')' Anon@13 BLOCK Anon@14 end -> STAT
State now 0 3
Entering state 5 
Reading a token: eol
eol
eol
Identifer lol
Next token is identifer
Reducing stack by rule 6, /* empty */ -> COMMA
State now 0 3 5
Entering state 6 
Reducing stack by rule 3, CHUNK STAT COMMA -> CHUNK
State now 0
Entering state 3 
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 122, identifer -> NAME
State now 0 3
Entering state 51 
Reducing stack by rule 51, NAME -> VAR
State now 0 3
Entering state 67 
Reading a token: (
Next token is '('
Reducing stack by rule 54, VAR -> VARORFUNC
State now 0 3
Entering state 53 
Next token is '('
Shifting token '(', Entering state 211 
Reading a token: Identifer giveme_str
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 122, identifer -> NAME
State now 0 3 53 211
Entering state 51 
Reducing stack by rule 51, NAME -> VAR
State now 0 3 53 211
Entering state 50 
Reading a token: (
Next token is '('
Reducing stack by rule 54, VAR -> VARORFUNC
State now 0 3 53 211
Entering state 53 
Next token is '('
Shifting token '(', Entering state 211 
Reading a token: )
Next token is ')'
Reducing stack by rule 96, /* empty */ -> EXP_LIST_OPT
State now 0 3 53 211 53 211
Entering state 212 
Next token is ')'
Shifting token ')', Entering state 213 
Reducing stack by rule 92, '(' EXP_LIST_OPT ')' -> ARGS
State now 0 3 53 211 53
Entering state 207 
Reducing stack by rule 90, VARORFUNC ARGS -> FUNCTION_CALL
State now 0 3 53 211
Entering state 58 
Reading a token: )
Next token is ')'
Reducing stack by rule 69, FUNCTION_CALL -> EXP
State now 0 3 53 211
Entering state 149 
Next token is ')'
Reducing stack by rule 60, EXP -> EXPLIST1
State now 0 3 53 211
Entering state 214 
Next token is ')'
Reducing stack by rule 95, EXPLIST1 -> EXP_LIST_OPT
State now 0 3 53 211
Entering state 212 
Next token is ')'
Shifting token ')', Entering state 213 
Reducing stack by rule 92, '(' EXP_LIST_OPT ')' -> ARGS
State now 0 3 53
Entering state 207 
Reducing stack by rule 90, VARORFUNC ARGS -> FUNCTION_CALL
State now 0 3
Entering state 72 
Reading a token: ;
Next token is ';'
Reducing stack by rule 9, FUNCTION_CALL -> STAT
State now 0 3
Entering state 5 
Next token is ';'
Shifting token ';', Entering state 7 
Reducing stack by rule 5, ';' -> COMMA
State now 0 3 5
Entering state 6 
Reducing stack by rule 3, CHUNK STAT COMMA -> CHUNK
State now 0
Entering state 3 
Reading a token: Next token is EOF
Shifting token EOF, Entering state 4 
Reducing stack by rule 2, CHUNK EOF -> PROGRAM
State now 0
Entering state 1 
Next token is EOF
Shifting token EOF, Entering state 2 
Reducing stack by rule 1, PROGRAM EOF -> $accept
State now 0
