Entering state 0 
Reducing stack by rule 4, /* empty */ -> CHUNK
State now 0
Entering state 3 
Reading a token: functionT
Next token is functionT
Shifting token functionT, Entering state 162 
Reading a token: Identifer TestPriority
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 110, identifer -> NAME
State now 0 3 162
Entering state 179 
Reading a token: (
Next token is '('
Reducing stack by rule 33, NAME -> FUNCNAME
State now 0 3 162
Entering state 163 
Next token is '('
Shifting token '(', Entering state 164 
Reading a token: )
Next token is ')'
Reducing stack by rule 26, /* empty */ -> PL_OPT
State now 0 3 162 163 164
Entering state 165 
Next token is ')'
Shifting token ')', Entering state 166 
Reducing stack by rule 19, /* empty */ -> Anon@1
State now 0 3 162 163 164 165 166
Entering state 167 
Reducing stack by rule 4, /* empty */ -> CHUNK
State now 0 3 162 163 164 165 166 167
Entering state 66 
Reading a token: eol
Identifer y
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 110, identifer -> NAME
State now 0 3 162 163 164 165 166 167 66
Entering state 51 
Reducing stack by rule 39, NAME -> VAR
State now 0 3 162 163 164 165 166 167 66
Entering state 67 
Reading a token: =
Next token is '='
Reducing stack by rule 38, /* empty */ -> VAR_LIST
State now 0 3 162 163 164 165 166 167 66 67
Entering state 68 
Next token is '='
Reducing stack by rule 36, VAR VAR_LIST -> VARLIST1
State now 0 3 162 163 164 165 166 167 66
Entering state 8 
Next token is '='
Shifting token '=', Entering state 9 
Reading a token: Digit:5
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 113, digit -> NUMBER
State now 0 3 162 163 164 165 166 167 66 8 9
Entering state 44 
Reading a token: +
Next token is '+'
Reducing stack by rule 52, NUMBER -> EXP
Number semantics: 5
State now 0 3 162 163 164 165 166 167 66 8 9
Entering state 141 
Next token is '+'
Shifting token '+', Entering state 19 
Reading a token: (
Next token is '('
Shifting token '(', Entering state 101 
Reading a token: Digit:4
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 113, digit -> NUMBER
State now 0 3 162 163 164 165 166 167 66 8 9 141 19 101
Entering state 44 
Reading a token: *
Next token is '*'
Reducing stack by rule 52, NUMBER -> EXP
Number semantics: 4
State now 0 3 162 163 164 165 166 167 66 8 9 141 19 101
Entering state 102 
Next token is '*'
Shifting token '*', Entering state 13 
Reading a token: Digit:2
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 113, digit -> NUMBER
State now 0 3 162 163 164 165 166 167 66 8 9 141 19 101 102 13
Entering state 44 
Reading a token: +
Next token is '+'
Reducing stack by rule 52, NUMBER -> EXP
Number semantics: 2
State now 0 3 162 163 164 165 166 167 66 8 9 141 19 101 102 13
Entering state 14 
Next token is '+'
Reducing stack by rule 60, EXP '*' EXP -> EXP
State now 0 3 162 163 164 165 166 167 66 8 9 141 19 101
Entering state 102 
Next token is '+'
Shifting token '+', Entering state 19 
Reading a token: Digit:2
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 113, digit -> NUMBER
State now 0 3 162 163 164 165 166 167 66 8 9 141 19 101 102 19
Entering state 44 
Reading a token: *
Next token is '*'
Reducing stack by rule 52, NUMBER -> EXP
Number semantics: 2
State now 0 3 162 163 164 165 166 167 66 8 9 141 19 101 102 19
Entering state 20 
Next token is '*'
Shifting token '*', Entering state 13 
Reading a token: Digit:5
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 113, digit -> NUMBER
State now 0 3 162 163 164 165 166 167 66 8 9 141 19 101 102 19 20 13
Entering state 44 
Reading a token: )
Next token is ')'
Reducing stack by rule 52, NUMBER -> EXP
Number semantics: 5
State now 0 3 162 163 164 165 166 167 66 8 9 141 19 101 102 19 20 13
Entering state 14 
Next token is ')'
Reducing stack by rule 60, EXP '*' EXP -> EXP
State now 0 3 162 163 164 165 166 167 66 8 9 141 19 101 102 19
Entering state 20 
Next token is ')'
Reducing stack by rule 63, EXP '+' EXP -> EXP
State now 0 3 162 163 164 165 166 167 66 8 9 141 19 101
Entering state 102 
Next token is ')'
Shifting token ')', Entering state 103 
Reducing stack by rule 59, '(' EXP ')' -> EXP
State now 0 3 162 163 164 165 166 167 66 8 9 141 19
Entering state 20 
Reading a token: /
Next token is '/'
Shifting token '/', Entering state 15 
Reading a token: Digit:6
Next token is digit
Shifting token digit, Entering state 48 
Reducing stack by rule 113, digit -> NUMBER
State now 0 3 162 163 164 165 166 167 66 8 9 141 19 20 15
Entering state 44 
Reading a token: ;
Next token is ';'
Reducing stack by rule 52, NUMBER -> EXP
Number semantics: 6
State now 0 3 162 163 164 165 166 167 66 8 9 141 19 20 15
Entering state 16 
Next token is ';'
Reducing stack by rule 61, EXP '/' EXP -> EXP
State now 0 3 162 163 164 165 166 167 66 8 9 141 19
Entering state 20 
Next token is ';'
Reducing stack by rule 63, EXP '+' EXP -> EXP
State now 0 3 162 163 164 165 166 167 66 8 9
Entering state 141 
Next token is ';'
Reducing stack by rule 48, EXP -> EXPLIST1
State now 0 3 162 163 164 165 166 167 66 8 9
Entering state 10 
Next token is ';'
Reducing stack by rule 8, VARLIST1 '=' EXPLIST1 -> STAT
State now 0 3 162 163 164 165 166 167 66
Entering state 5 
Next token is ';'
Shifting token ';', Entering state 7 
Reducing stack by rule 5, ';' -> COMMA
State now 0 3 162 163 164 165 166 167 66 5
Entering state 6 
Reducing stack by rule 3, CHUNK STAT COMMA -> CHUNK
State now 0 3 162 163 164 165 166 167
Entering state 66 
Reading a token: comment begin
comment end
returnT
Next token is returnT
Shifting token returnT, Entering state 139 
Reading a token: Identifer y
Next token is identifer
Shifting token identifer, Entering state 52 
Reducing stack by rule 110, identifer -> NAME
State now 0 3 162 163 164 165 166 167 66 139
Entering state 51 
Reducing stack by rule 39, NAME -> VAR
State now 0 3 162 163 164 165 166 167 66 139
Entering state 50 
Reading a token: ;
Next token is ';'
Reducing stack by rule 54, VAR -> EXP
State now 0 3 162 163 164 165 166 167 66 139
Entering state 141 
Next token is ';'
Reducing stack by rule 48, EXP -> EXPLIST1
State now 0 3 162 163 164 165 166 167 66 139
Entering state 140 
Next token is ';'
Reducing stack by rule 15, returnT EXPLIST1 -> STAT
State now 0 3 162 163 164 165 166 167 66
Entering state 5 
Next token is ';'
Shifting token ';', Entering state 7 
Reducing stack by rule 5, ';' -> COMMA
State now 0 3 162 163 164 165 166 167 66 5
Entering state 6 
Reducing stack by rule 3, CHUNK STAT COMMA -> CHUNK
State now 0 3 162 163 164 165 166 167
Entering state 66 
Reading a token: eol
end
Next token is end
Reducing stack by rule 7, CHUNK -> BLOCK
State now 0 3 162 163 164 165 166 167
Entering state 168 
Reducing stack by rule 20, /* empty */ -> Anon@2
State now 0 3 162 163 164 165 166 167 168
Entering state 169 
Next token is end
Shifting token end, Entering state 170 
Reducing stack by rule 21, functionT FUNCNAME '(' PL_OPT ')' Anon@1 BLOCK Anon@2 end -> STAT
State now 0 3
Entering state 5 
Reading a token: Next token is EOF
Reducing stack by rule 6, /* empty */ -> COMMA
State now 0 3 5
Entering state 6 
Reducing stack by rule 3, CHUNK STAT COMMA -> CHUNK
State now 0
Entering state 3 
Next token is EOF
Shifting token EOF, Entering state 4 
Reducing stack by rule 2, CHUNK EOF -> PROGRAM
State now 0
Entering state 1 
Next token is EOF
Shifting token EOF, Entering state 2 
Reducing stack by rule 1, PROGRAM EOF -> $accept
State now 0
